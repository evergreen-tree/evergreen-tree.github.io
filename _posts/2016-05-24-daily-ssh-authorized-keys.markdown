---
layout: post
title:  "[技术每日说] -  SSH登陆的原理分析和免登陆设置!"
date:   2016-05-24 15:57:01 +0800
categories: Daily linux
---

> SSH 为 Secure Shell 的缩写，由 IETF 的网络工作小组（Network Working Group）所制定；SSH 为建立在应用层和传输层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用SSH 协议可以有效防止远程管理过程中的信息泄露问题。

<!--more-->


SSH 为 Secure Shell 的缩写，由 IETF 的网络工作小组（Network Working Group）所制定；SSH 为建立在应用层和传输层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用SSH 协议可以有效防止远程管理过程中的信息泄露问题。SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。SSH客户端适用于多种平台。

从客户端来看，SSH提供两种级别的安全验证：

## 第一种级别是基于口令的安全验证

只要你知道自己帐号和口令，就可以登录到远程主机。所有传输的数据都会被加密， 但是不能保证你正在连接的服务器就是你想连接的服务器。这个过程如下：

（1）远程主机收到用户的登录请求，把自己的公钥发给用户。

（2）用户使用这个公钥，将登录密码加密后，发送回来。

（3）远程主机用自己的私钥，解密登录密码，如果密码正确，就同意用户登录。这种方式可能会有别的服务器在冒充真正的服务器，将公钥发送给客户端，客户端就会将密码加密后发送给冒充的服务器，冒充的服务器就可以拿自己的私钥获取到密码，也就是受到“中间人”这种方式的攻击。

值得一说的是当第一次链接远程主机时，会提示您当前主机的`”公钥指纹”`，询问您是否继续，如果选择继续后就可以输入密码进行登录了，当远程的主机接受以后，该台服务器的公钥就会保存到`~/.ssh/known_hosts`文件中。

## 第二种级别是基于密匙的安全验证

需要依靠密匙，也就是你必须为自己创建一对密匙，并把公用密匙放在需要访问的服务器上。如果你要连接到SSH服务器上，客户端软件就会向服务器发出请求，请求用你的密匙进行安全验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公用密匙，然后把它和你发送过来的公用密匙进行比较。如果两个密匙一致，服务器就用公用密匙加密“质询”并把它发送给客户端软件。客户端软件收到“质询”之后就可以用你的私人密匙解密再把它发送给服务器。用这种方式，你必须知道自己密匙的口令。但是，与第一种级别相比，第二种级别不需要在网络上传送口令。第二种级别不仅加密所有传送的数据，而且“中间人”这种攻击方式也是不可能的（因为他没有你的私人密匙）。但是整个登录的过程可能需要10秒，但是相比输入密码的方式来说10秒也不长。

那么如何生成自己的一对密钥呢？打开终端执行`ssh-keygen`，该命令会在~/.ssh/目录下创建id_rsa、id_rsa.pub两个文件，分别为您的公钥和私钥。demo如下

```shell
ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa
```

将公钥拷贝到服务器的`~/.ssh/authorized_keys`文件中就可以了。拷贝方法有如下几种：

将公钥通过scp拷贝到服务器上，然后追加到`~/.ssh/authorized_keys`文件中，这种方式比较麻烦。

`scp -P 22 ~/.ssh/id_rsa.pub user@host:~/`

通过ssh-copyid程序，ssh-copyid user@host即可，但是这种方式不支持更改端口号（我没找到）。该程序ubuntu系统自带无需安装，其实该程序为一个脚本。

可以通过`cat ~/.ssh/id_rsa.pub | ssh -p 22 user@host 'cat >> ~/.ssh/authorized_keys'`，这个也是我比较常用的方法，因为可以更改端口号。

当然还有其他的一些我不知道的方法，只要好用就是好方法。

测试

如果你有远程的linux服务器，可以自己尝试一下，如果没有也没关系，可以尝试登录自己的电脑,执行：ssh localhost。当然如果你没有搭建服务器的话会提示错误，执行sudo apt-get install openssh-server安装一个ssh-server，然后就可以使用ssh进行登录了。
















