---
layout: post
title:  "[技术每日说] -  Java对于SSL的支持以及证书的安装!"
date:   2016-05-20 10:30:01 +0800
categories: Daily
---

> 随着最近行业内部对于安全的要求的提高，公司的各条业务线都纷纷切成SSL，虽然SSL未必说一定安全，但是最起码可以在一定程度上保证用户免于网络监听的烦恼。在切换的过程中遇到过很多问题，比如证书，签名以及升级之后跟各个客户之间的联调升级等。通过仔细的研究SSL不得不说，SSL还真是安全。

<!--more-->

> 首先请允许我对数学致敬：(g^b%p)^a%p=(g^a%p)^b%p，当年创造这种算式的人是天才，无可比拟的天才。这篇文章在一定程度上解释明白了秘钥交换算法：<http://my.oschina.net/u/1382972/blog/330456>




> 什么叫做cacerts，certified authority certificates的缩写。就是存证书的地方

Transport Layer Security (TLS) 1.0 / Secure Sockets Layer (SSL) 3.0是我们的web体系中用来保护Client（浏览器）到服务器的交互的安全性的。使用了这两种协议的交互方式叫做HTTPS

http://idiotechie.com/understanding-transport-layer-security-secure-socket-layer/

从网上摘抄来的一个介绍SSL流程的说明：

## SSL协议的工作流程：

#### 服务器认证阶段：

`SSL最核心的两点就是交换秘钥以及使用HASH算法进行的数字签名验证`

- 1）客户端向服务器发送一个开始信息“Hello”以便开始一个新的会话连接；
- 2）服务器根据客户的信息确定是否需要生成新的主密钥，如需要则服务器在响应客户的“Hello”信息时将包含生成主密钥所需的信息；
- 3）客户根据收到的服务器响应信息，产生一个主密钥，并用服务器的公开密钥加密后传给服务器；
- 4）服务器恢复该主密钥，并返回给客户一个用主密钥认证的信息，以此让客户认证服务器。

#### 用户认证阶段：

- 在此之前，服务器已经通过了客户认证，这一阶段主要完成对客户的认证。经认证的服务器发送一个提问给客户，客户则返回（数字）签名后的提问和其公开密钥，从而向服务器提供认证。

> 通过上面的介绍可以看出来，使用SSL进行的网络通讯，虽然内容是基于TCP和HTTP的，但是因为内容是加密的，而且，每个客户端向服务器发送的秘钥是不同的，从而可以保证传输的安全性。

## TSL协议的工作流程

协议由两层组成： TLS 记录协议（TLS Record）和 TLS 握手协议（TLS Handshake）。



在SSL中会使用密钥交换算法交换密钥；使用密钥对数据进行加密；使用散列算法对数据的完整性进行验证，使用数字证书证明自己的身份。好了，下面开始介绍SSL协议。

好吧，以上的部分，对于非专业人员来讲，只有以票友身份进行参与的份儿，

## Java对于SSL的支持





## 参考文档

<http://hengstart.iteye.com/blog/840561>

<http://kb.cnblogs.com/page/162080/>


















